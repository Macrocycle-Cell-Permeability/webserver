library(ggplot2)
library(gridExtra)  # For combining plots
# Assuming data_features is your dataset
plots <- list()
sky_blue <- "#87CEEB"  # Sky-blue color
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
# Calculate range if needed, here's a placeholder for actual dynamic calculation
min_val <- min(data_features[[current_feature]], na.rm = TRUE)
max_val <- max(data_features[[current_feature]], na.rm = TRUE)
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = sky_blue, bins = 30, color = "black") + # Sky-blue fill
labs(title = current_feature, y = NULL) +  # Remove y-axis label
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 14),
axis.text.x = element_text(size = 14, angle = 45, hjust = 1),  # Make x-axis label bigger
axis.text.y = element_text(size = 16)) +
scale_x_continuous(limits = c(min_val, max_val))  # Set dynamic range for x-axis
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = "Feature Distribution Histograms"))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
library(ggplot2)
library(gridExtra)
# Assuming data_features is your dataset with the features as columns
plots <- list()
sky_blue <- "#87CEEB"  # Sky-blue color for histograms
for (i in 1:9) {  # Adjust this if you have a different number of features
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = sky_blue, binwidth = 1, color = "black", boundary = 0) +  # Adjust binwidth as needed
labs(title = current_feature, y = NULL) +  # Remove y-axis label
theme_minimal() +
theme(
legend.position = "none",
plot.title = element_text(size = 14),  # Adjust title size as needed
axis.title.x = element_text(size = 14),  # Make x-axis label bigger
axis.title.y = element_blank(),  # Remove y-axis title
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_blank(),  # Remove y-axis text
panel.grid.major = element_blank(),  # Remove major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
panel.background = element_rect(fill = "white", colour = "white")  # White background
)
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 3, top = "Feature Distribution Histograms"))
# Save the combined plot to a file
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 300)  # Adjust the dimensions as needed
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
colors <- grDevices::rainbow(9)
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = colors[i], bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = "Feature Distribution Histograms"))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = "Feature Distribution Histograms"))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.text.y.left = element_text(size = 6)
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.text.y.left = element_text(size = 6),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = "Feature Distribution Histograms"))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.text.y.left = element_text(size = 16),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = "Feature Distribution Histograms"))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 6),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = "Feature Distribution Histograms"))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 16),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = "Feature Distribution Histograms"))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 16),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = ""))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 16),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1),
axis.text.y = element_text(size = 16),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = ""))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
data <- read.csv(file = '/Users/qiushifeng/Desktop/macrocycle/macrocycles_overall_sta.csv', header = T, as.is = T, dec = ".", na.strings = ".")
data_features <- data[,3:10]
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:9) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 16),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 12, hjust = 1),
axis.text.y = element_text(size = 16),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = ""))
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 16),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 12, hjust = 1),
axis.text.y = element_text(size = 16),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 5, top = ""))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 16),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 12, hjust = 1),
axis.text.y = element_text(size = 16),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 4, top = ""))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 20),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 16, hjust = 1),
axis.text.y = element_text(size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 4, top = ""))
ggsave("Feature_histograms_combined.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 20),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 16, hjust = 1),
axis.text.y = element_text(size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 4, top = ""))
ggsave("Feature_histograms_combined_20.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 22),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 20, hjust = 1),
axis.text.y = element_text(size = 22),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 4, top = ""))
ggsave("Feature_histograms_combined_20.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 22),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 20, hjust = 1),
axis.text.y = element_text(size = 22),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 4, top = ""))
ggsave("Feature_histograms_combined_22.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 20),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 18, hjust = 1),
axis.text.y = element_text(size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 4, top = ""))
ggsave("Feature_histograms_combined_20.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 18),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 16, hjust = 1),
axis.text.y = element_text(size = 18),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 4, top = ""))
ggsave("Feature_histograms_combined_20.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 18),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 16, hjust = 1),
axis.text.y = element_text(size = 18),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 4, top = ""))
ggsave("Feature_histograms_combined_18.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
# Load the necessary libraries
library(ggplot2)
library(gridExtra)  # You can also use library(patchwork) for a different approach to combining plots
# Assuming data_features is your dataset
plots <- list()
# Create a vector of colors, one for each feature
for (i in 1:8) {  # Assuming you have 9 features you're interested in
current_feature <- names(data_features)[i]
p <- ggplot(data_features, aes_string(x = current_feature)) +
geom_histogram(fill = "royalblue", bins = 30, color = "black") + # Adjust number of bins as necessary
labs(title = current_feature) +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(size = 0.1),
axis.title.x = element_text(size = 20),
axis.title.y= element_text(size = 0.1),
axis.text.x = element_text(size = 18, hjust = 1),
axis.text.y = element_text(size = 20),
panel.border = element_rect(colour = "black", fill=NA, size=1))
plots[[i]] <- p
}
# Combine the plots into a single layout
combined_plot <- do.call(grid.arrange, c(plots, ncol = 4, top = ""))
ggsave("Feature_histograms_combined_20.png", plot = combined_plot, width = 16, height = 8, dpi = 600)
